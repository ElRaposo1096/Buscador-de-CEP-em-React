/* vh é o view height, ou seja o campo de vista ou algo similar.
O display flex é o mais indicado para trabalhar com esse tipo de painel
alinhei os itens ao centro após remodelar o content 
para direcionarmos melhor os itens podemos fazer em coluna */
.container{
  height: 100vh;
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  flex-direction: column;
  background: linear-gradient(#1c1c1c, #87CEFA);
  
}
.title{
  color: white;
  font-size: 50px;
  animation: iniAnimation 3s;
}

.containerInput{
  background-color: rgba(251, 251, 251, 0.2);/*cor e opacidade/intensidade da cor*/
  padding: 15px;
  margin: 30px 0;
  display: flex;
  border-radius: 6px;
  box-shadow: 1px 3 4;
}
.containerInput input{
  background-color: transparent;
  border: 0;
  font-size: 18px;
  color: white;
  outline: none;
}
/* configurando o input do container em especifico
dei transparencia mas agora tenho que configurar o icon do react na mesma cor 
tambem preciso escurecer o placeholder*/
.container input::placeholder{
  color: #363636;
}

.buttonSearch{
  background: transparent;
  border: 0;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: transform 0.5s;
}
.buttonSearch:hover{
  transform: scale(1.2);
}


@keyframes iniAnimation {
  from{
    transform: rotateX(90deg);
  }
  to{
    transform: rotateX(0deg);
  }
}

.main{
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column; /*quarteto de centralização*/
  background: white;
  width: 400px;
  border-radius: 8px;
}
/*Primeira vez que usei o keyframes para estilizar um css,
é importante você dar um nome pra @keyframes
a mesma ira funcionar como uma function no trecho do código
coloque o nome da 'function' keyframes e também é possível definir o tempo.*/ 

.main h2{
  margin: 16px 0;
  font-size: 35px;
}

.main span{
  margin-bottom: 16px;
  font-weight: bold;
}

@media (max-width: 700px){
  title{
    font-size: 60px;
  }
  main{
    width: 80%;
  }
}